{"version":3,"sources":["utils/names.util.js","utils/number.util.js","logic/name-generator.js","model/view/name-mode.js","components/name-container/NameContainer.jsx","components/name-generator/NameGenerator.jsx","components/logo/Logo.jsx","index.js","components/App.jsx"],"names":["processName","str","trim","randomInArr","array","min","max","length","Math","floor","random","Genders","MALE","FEMALE","OTHER","firstParts","maleNameParts","femaleNameParts","otherNameParts","getRandomName","gender","capitalize","twistParameter","twistCoefficient","CHARACTER","TagStyles","_TagStyles","Object","defineProperty","NameMode","backgroundColor","color","NameTag","_ref","genderClass","name","mode","react_default","a","createElement","className","concat","style","undefined","NameContainer","_ref2","tags","names","map","index","NameContainer_NameTag","value","key","id","NameGenerator","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveName","state","setState","allNames","toConsumableArray","nameMode","generateName","_this2","placeholder","onChange","event","target","onClick","disabled","isEmpty","type","checked","htmlFor","NameContainer_NameContainer","Component","randomColor","i","ImageLogo","rotation","xmlns","width","height","viewBox","version","stroke","fillRule","fill","fillOpacity","d","Logo","_useState","useState","_useState2","slicedToArray","changeColor","_useState3","_useState4","setRotation","onMouseEnter","setTimeout","Logo_ImageLogo","ReactDOM","render","Logo_Logo","components_name_generator_NameGenerator","document","getElementById"],"mappings":"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","file":"static/js/main.3bc90814.chunk.js","sourcesContent":["export const processName = str => str.trim()","/**\r\n * Возвращает случайное число в заданном диапазоне\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nexport const randomIn = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n/**\r\n * Получает случайный элемент переданного массива\r\n * @param {Array<any>} array\r\n */\r\nexport const randomInArr = array => array[randomIn(0, array.length - 1)]","import capitalize from 'lodash/capitalize'\r\nimport { randomInArr } from '../utils/number.util'\r\n\r\n/**\r\n * Перечисление возможных полов персонажа\r\n */\r\nexport const Genders = {\r\n  MALE: 'Мужской',\r\n  FEMALE: 'Женский',\r\n  OTHER: 'Другой'\r\n}\r\n\r\n/*\r\n * Генератор имён. \r\n * TODO: Должно быть несколько способов генерить имена:\r\n * - какой-то набор имён будет захардкожен в приложении\r\n * - сложение некоторых захардкоженных кусков имён\r\n * - загрузка внешних словарей с именами\r\n */\r\nconst firstParts = [\r\n  'ака', 'алас', 'али', 'анг', 'ар', 'гэл', 'де', 'дем', 'джакс', 'кай', 'карс', 'ки', 'кил', 'кин', 'куман', 'лагр',\r\n  'леп', 'лито', 'лора', 'мек', 'мира', 'мон', 'нира', 'о', 'пара', 'пирс', 'ранд', 'рем', 'рол', 'рон', 'сар', 'так',\r\n  'тари', 'тор', 'тэр', 'ун', 'фел', 'фес', 'фен', 'фрел', 'цум', 'эл'\r\n]\r\n\r\nconst maleNameParts = [\r\n  'дил', 'шим', 'кай', 'мэй', 'эль', 'ол', 'хим', 'рой', 'ронд', 'он', 'сим', 'гранж', 'филд', 'талас', 'стер',\r\n  'зул', 'кард', 'кил', 'дес', 'ранг', 'рел', 'рен', 'тир', 'огил', 'зис', 'тан', 'тео', 'лес', 'ст', 'вит', 'пе', 'теск', 'ольм',\r\n  'тен', 'мон', 'зен', 'ис', 'ус', 'нус', 'нис', 'гус', 'нус', 'анс', 'альд', 'бальд', 'мир', 'лир', 'тум'\r\n]\r\n\r\nconst femaleNameParts = [\r\n  'дина', 'шима', 'кая', 'мэй', 'эль', 'кина', 'энь', 'уфа', 'уха', 'тесс', 'эсс', 'ола', 'ра', 'вен', 'ада', 'бра', 'иль', 'да',\r\n  'лия', 'ья', 'ия', 'теса', 'ла', 'мара', 'на', 'минель', 'леса', 'иса', 'тея', 'тер', 'тра', 'нья', 'ктея', 'сея', 'айя'\r\n]\r\n\r\nconst otherNameParts = [\r\n  'кет', 'зе', 'мезе', 'ше', 'пе', 'льпе', 'фес', 'сис', 'фе', 'мо', 'умо', 'уно', 'пург', 'тарпо', 'ольмо', 'зефф', 'черс',\r\n  'тур', 'омо', 'рене', 'рено', 'шефе', 'оссе', 'харж', 'бре', 'те', 'ги', 'иги', 'зулу', 'зиги'\r\n]\r\n\r\nexport function getRandomName(gender) {\r\n  switch (gender) {\r\n    case Genders.MALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(maleNameParts))\r\n    }\r\n    case Genders.FEMALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(femaleNameParts))\r\n    }\r\n    default: {\r\n      let twistParameter = '' // здесь присутствует возможность расширения имени дополнительным слогом\r\n      let twistCoefficient = Math.random() * 10 + 1\r\n      if (twistCoefficient <= 1) {\r\n        twistParameter = randomInArr(maleNameParts)\r\n      } else if (twistCoefficient > 1 && twistCoefficient <= 3) {\r\n        twistParameter = randomInArr(femaleNameParts)\r\n      }\r\n      return capitalize(randomInArr(firstParts) + twistParameter + randomInArr(otherNameParts))\r\n    }\r\n  }\r\n}","export const CHARACTER = 'CHARACTER'\r\nexport const OBJECT = 'OBJECT'","import React from 'react'\r\nimport * as NameMode from '../../model/view/name-mode'\r\nimport { Genders } from '../../logic/name-generator'\r\n\r\nimport './NameContainer.scss'\r\n\r\nconst TagStyles = {\r\n  [NameMode.CHARACTER]: {\r\n    backgroundColor: '#286958',\r\n    color: '#fff'\r\n  },\r\n  [NameMode.OBJECT]: {\r\n    backgroundColor: '#3a4f69',\r\n    color: '#fff'\r\n  }\r\n}\r\n\r\nexport const NameTag = ({ name, mode, gender }) => {\r\n  let genderClass\r\n  switch (gender) {\r\n    case Genders.FEMALE:\r\n      genderClass = 'name-tag--female'\r\n      break\r\n    case Genders.MALE:\r\n      genderClass = 'name-tag--male'\r\n      break\r\n    case Genders.OTHER:\r\n      genderClass = 'name-tag--other-gender'\r\n      break\r\n    default:\r\n      genderClass = ''\r\n  }\r\n  return (\r\n    <div className={`name-tag ${genderClass}`} style={mode ? TagStyles[mode] : undefined}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\n// TODO this supposed to be connected to reducer\r\nexport const NameContainer = ({ names }) => {\r\n  const tags = names.map((name, index) => <NameTag name={name.value} mode={name.mode} gender={name.gender} key={index}/>)\r\n  return (\r\n    <div id=\"name-container\">\r\n      {tags}\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport { processName } from '../../utils/names.util'\r\nimport { Genders, getRandomName } from '../../logic/name-generator'\r\nimport { NameContainer } from '../name-container/NameContainer'\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport * as NameMode from '../../model/view/name-mode'\r\nimport './NameGenerator.scss'\r\n\r\nclass NameGenerator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      allNames: [],\r\n      nameMode: NameMode.CHARACTER,\r\n      gender: Genders.MALE\r\n    }\r\n  }\r\n\r\n  saveName = () => {\r\n    if (this.state.name) {\r\n      this.setState(state => ({\r\n        name: '',\r\n        allNames: [\r\n          ...state.allNames,\r\n          {\r\n            value: processName(state.name),\r\n            mode: state.nameMode,\r\n            gender: state.gender\r\n          }\r\n        ]\r\n      }))\r\n    }\r\n  }\r\n\r\n  generateName = () => {\r\n    this.setState(state => ({\r\n      name: getRandomName(state.gender)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"name-generator\">\r\n        <div className=\"name-generator__input-group\">\r\n          <input\r\n            className=\"name-generator__input\"\r\n            value={this.state.name}\r\n            placeholder=\"Введите имя/название\"\r\n            onChange={event => this.setState({ name: event.target.value })}\r\n          />\r\n          <button\r\n            className=\"name-generator__button name-generator__button-generate\"\r\n            onClick={this.generateName}\r\n          >\r\n            Сгенерировать\r\n          </button>\r\n          <button\r\n            className=\"name-generator__button name-generator__button-save\"\r\n            disabled={isEmpty(this.state.name)}\r\n            onClick={this.saveName}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </div>\r\n\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.CHARACTER}\r\n            onChange={() => this.setState({ nameMode: NameMode.CHARACTER })}\r\n            id=\"rb-character\"\r\n          />\r\n          <label htmlFor=\"rb-character\">Персонаж</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.OBJECT}\r\n            onChange={() => this.setState({ nameMode: NameMode.OBJECT })}\r\n            id=\"rb-object\"\r\n          />\r\n          <label htmlFor=\"rb-object\">Объект</label>\r\n        </form>\r\n\r\n        {this.state.nameMode === NameMode.CHARACTER &&\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.MALE}\r\n            onChange={() => this.setState({gender: Genders.MALE})}\r\n            id=\"rb-male\"\r\n          />\r\n          <label htmlFor=\"rb-male\">Мужской</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.FEMALE}\r\n            onChange={() => this.setState({gender: Genders.FEMALE})}\r\n            id=\"rb-female\"\r\n          />\r\n          <label htmlFor=\"rb-female\">Женский</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.OTHER}\r\n            onChange={() => this.setState({gender: Genders.OTHER})}\r\n            id=\"rb-other-gender\"\r\n          />\r\n          <label htmlFor=\"rb-other-gender\">Другой</label>\r\n        </form>\r\n        }\r\n        <NameContainer names={this.state.allNames} />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NameGenerator","import React, { useState } from 'react'\r\n\r\nimport './Logo.scss'\r\n\r\nconst randomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nconst ImageLogo = ({ color, rotation }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n       className={rotation ? 'rotating' : 'normal'}\r\n       width=\"50px\"\r\n       height=\"50px\"\r\n       viewBox=\"0 0 32 32\"\r\n       version=\"1.1\"\r\n  >\r\n    <g>\r\n      <path\r\n        style={{\r\n          stroke: 'none',\r\n          fillRule: 'nonzero',\r\n          fill: color,\r\n          fillOpacity: 1,\r\n        }}\r\n        d=\"M 16 3.71875 L 15.375 4.21875 L 7.125 10.625 L 6.875 10.84375 L 6.78125 11.15625 L 4.03125 21.25 L 3.8125 22.03125 L 16 28.125 L 28.1875 22.03125 L 27.96875 21.25 L 25.21875 11.15625 L 25.125 10.84375 L 24.875 10.625 L 16.625 4.21875 Z M 15 7.0625 L 15 10 L 11.21875 10 Z M 17 7.0625 L 20.78125 10 L 17 10 Z M 9.0625 12 L 14 12 L 10.40625 16.78125 Z M 18 12 L 22.9375 12 L 21.59375 16.78125 Z M 16 12.6875 L 20 18 L 12 18 Z M 7.8125 15 L 8.8125 18.5 L 6.5625 19.625 Z M 24.1875 15 L 25.4375 19.625 L 23.1875 18.5 Z M 12 20 L 20 20 L 16 25.3125 Z M 9.6875 20.28125 L 12.625 24.1875 L 7.25 21.5 Z M 22.3125 20.28125 L 24.75 21.5 L 19.375 24.1875 Z M 22.3125 20.28125 \"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport const Logo = () => {\r\n  let [color, changeColor] = useState('#000')\r\n  let [rotation, setRotation] = useState(false)\r\n  return (\r\n    <div id=\"logo\"\r\n       onMouseEnter={() => changeColor(randomColor())}\r\n       onClick={() => {\r\n         setRotation(true)\r\n         setTimeout(() => {\r\n           setRotation(false)\r\n           changeColor(randomColor())\r\n         }, 500)\r\n       }}\r\n    >\r\n      <ImageLogo color={color} rotation={rotation}/>\r\n      <div className=\"caption\" style={{ color }}>Quenta</div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nimport './index.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","import React from 'react'\r\nimport NameGenerator from './name-generator/NameGenerator'\r\nimport { Logo } from './logo/Logo'\r\n\r\nimport './App.scss'\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <div id=\"application-layout\">\r\n      <header className=\"app-header\">\r\n        <Logo />\r\n      </header>\r\n      <article className=\"app-content\">\r\n        <NameGenerator />\r\n      </article>\r\n      <footer className=\"app-footer\">\r\n        © Valery Romanov, 2019\r\n      </footer>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}