{"version":3,"sources":["components/logo/Logo.jsx","localization.js","components/char-book/CharBook.jsx","utils/number.util.js","logic/name-generator.js","components/name-generator/name-container/NameContainer.jsx","model/view/name-mode.js","components/routes.js","components/name-generator/NameGenerator.jsx","utils/names.util.js","reducers/char-book.actions.js","components/App.jsx","reducers/quenta.reducer.js","reducers/skill.reducer.js","reducers/race.reducer.js","reducers/char-book.reducer.js","reducers/index.js","index.js"],"names":["randomColor","color","i","Math","floor","random","ImageLogo","rotation","xmlns","className","width","height","viewBox","style","stroke","fillRule","fill","fillOpacity","d","Logo","useState","changeColor","setRotation","id","onMouseEnter","onClick","setTimeout","en","LOCALE_CAPTION","navbarCaptions","CHARACTER_GALLERY","NAME_GEN","LANGUAGE_TOGGLE_MSG","links","charCatalog","nameGen","charBook","SELECT_CHARACTER_MSG","CLASS_LABEL","RACE_LABEL","SOURCE_LABEL","ru","Sidebar","url","currentLocale","charEntries","map","character","index","to","activeClassName","key","src","tokenImg","alt","name","captions","CharacterInfo","charId","useParams","entry","find","mainImg","artSource","LocaleConstants","href","link","class","subclass","race","bio","randomInArr","array","min","max","length","Genders","firstParts","maleNameParts","femaleNameParts","otherNameParts","getRandomName","gender","capitalize","twistParameter","twistCoefficient","TagStyles","backgroundColor","NameTag","genderClass","mode","undefined","NameContainer","tags","names","value","routes","textKey","path","component","useRouteMatch","useStore","getState","charBookReducer","exact","props","saveName","state","setState","allNames","str","trim","nameMode","generateName","this","placeholder","onChange","event","target","disabled","isEmpty","type","checked","htmlFor","Component","isLegacy","ACTION_TYPES","loadEntries","dispatch","fetch","then","response","json","data","payload","catch","error","App","changeLocale","locale","r","title","Date","getFullYear","connect","entries","InitialState","quentas","quentaToEdit","skillsets","currentQuentaSkills","SKILLSETS_LOADED","SKILLSET_ADDED","QUENTA_ADD_SKILL","QUENTA_REMOVE_SKILL","QUENTA_CLEAR_SKILLS","races","initialState","combineReducers","action","quentaReducer","filter","q","equals","skillReducer","SKILL_ADDED","skill","orderBy","raceReducer","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"oYAIMA,G,MAAc,WAGlB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,IAGHK,EAAY,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAOM,EAAV,EAAUA,SAAV,OAChB,yBAAKC,MAAM,6BACNC,UAAWF,EAAW,WAAa,SACnCG,MAAM,OACNC,OAAO,OACPC,QAAQ,aAEX,2BACE,0BACEC,MAAO,CACLC,OAAQ,OACRC,SAAU,UACVC,KAAMf,EACNgB,YAAa,GAEfC,EAAE,iqBAMGC,EAAO,WAAO,IAAD,EACGC,mBAAS,QADZ,mBACnBnB,EADmB,KACZoB,EADY,OAEMD,oBAAS,GAFf,mBAEnBb,EAFmB,KAETe,EAFS,KAGxB,OACE,yBAAKC,GAAG,OACLC,aAAc,kBAAMH,EAAYrB,MAChCyB,QAAS,WACPH,GAAY,GACZI,YAAW,WACTJ,GAAY,GACZD,EAAYrB,OACX,OAGN,kBAAC,EAAD,CAAWC,MAAOA,EAAOM,SAAUA,IACnC,yBAAKE,UAAU,UAAUI,MAAO,CAAEZ,UAAlC,Y,OCjDO0B,EAAK,CAChBC,eAAgB,KAChBC,eAAgB,CACdC,kBAAmB,oBACnBC,SAAU,iBACVC,oBAAqB,sJACrBC,MAAO,CACLC,YAAa,oBACbC,QAAS,mBAGbC,SAAU,CACRC,qBAAsB,wBACtBC,YAAa,SACbC,WAAY,QACZC,aAAc,YAILC,EAAK,CAChBb,eAAgB,KAChBC,eAAgB,CACdC,kBAAmB,0GACnBC,SAAU,kFACVC,oBAAqB,oBACrBC,MAAO,CACLC,YAAa,0GACbC,QAAS,oFAGbC,SAAU,CACRC,qBAAsB,6GACtBC,YAAa,kCACbC,WAAY,4BACZC,aAAc,sD,MC3BlB,SAASE,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YACrC,OACE,2BAAOpC,UAAU,sBACdoC,EAAYC,KAAI,SAACC,EAAWC,GAAZ,OACf,kBAAC,IAAD,CACEC,GAAE,UAAKN,EAAL,YAAYI,EAAUxB,IACxBd,UAAU,2BACVyC,gBAAgB,SAChBC,IAAKH,GAEL,yBAAKvC,UAAU,2BAA2B2C,IAAKL,EAAUM,SAAUC,IAAKP,EAAUQ,OAClF,0BAAM9C,UAAU,2BAA2BsC,EAAUS,SAASZ,GAAeW,WAOvF,SAASE,EAAT,GAAwD,IAA/Bb,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YAC9Ba,EAAWC,cAAXD,OACFE,EAAQf,EAAYgB,MAAK,SAAAd,GAAS,OAAIA,EAAUxB,KAAOmC,KAE7D,OAAKE,EAIH,oCACE,0BAAMnD,UAAU,gCACbmD,EAAMJ,SAASZ,GAAeW,MAEjC,yBAAK9C,UAAU,iCACb,yBACE2C,IAAKQ,EAAME,QACXR,IAAKM,EAAMJ,SAASZ,GAAeW,KACnC9C,UAAU,0BAEXmD,EAAMG,WACL,6BACE,0BAAMtD,UAAU,yBACbuD,EAAgBpB,GAAeR,SAASI,cAF7C,OAKE,uBAAGyB,KAAML,EAAMG,UAAUG,KAAMzD,UAAU,8BACtCmD,EAAMG,UAAUR,MAAQK,EAAMG,UAAUG,QAKjD,6BAAK,gCAASF,EAAgBpB,GAAeR,SAASE,aAAtD,IAA6EsB,EAAMJ,SAASZ,GAAeuB,MAA3G,KAAoHP,EAAMJ,SAASZ,GAAewB,SAAlJ,KACA,6BAAK,gCAASJ,EAAgBpB,GAAeR,SAASG,YAAtD,IAA4EqB,EAAMJ,SAASZ,GAAeyB,MAC1G,6BAAMT,EAAMJ,SAASZ,GAAe0B,MA3B/B,6C,4BCnBEC,EAAc,SAAAC,GAAK,OAAIA,GANXC,EAM0B,EANrBC,EAMwBF,EAAMG,OAAS,EAN/BxE,KAAKC,MAAMD,KAAKE,UAAYqE,EAAMD,EAAM,IAAMA,IAA5D,IAACA,EAAKC,GCCjBE,EACL,6CADKA,EAEH,6CAFGA,EAGJ,uCAUHC,EAAa,CACjB,qBAAO,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,eAAM,qBAAO,iCAAS,qBAAO,2BAAQ,eAAM,qBAAO,qBAAO,iCAAS,2BAC5G,qBAAO,2BAAQ,2BAAQ,qBAAO,2BAAQ,qBAAO,2BAAQ,SAAK,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,qBAC9G,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,gBAG5DC,EAAgB,CACpB,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,2BAAQ,eAAM,qBAAO,iCAAS,2BAAQ,iCAAS,2BACtG,qBAAO,2BAAQ,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,eAAM,2BAAQ,2BACzH,qBAAO,qBAAO,qBAAO,eAAM,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,iCAAS,qBAAO,qBAAO,sBAG/FC,EAAkB,CACtB,2BAAQ,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,eAC1H,qBAAO,eAAM,eAAM,2BAAQ,eAAM,2BAAQ,eAAM,uCAAU,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,sBAG/GC,EAAiB,CACrB,qBAAO,eAAM,2BAAQ,eAAM,eAAM,2BAAQ,qBAAO,qBAAO,eAAM,eAAM,qBAAO,qBAAO,2BAAQ,iCAAS,iCAAS,2BAAQ,2BACnH,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,eAAM,eAAM,qBAAO,2BAAQ,4BAGnF,SAASC,EAAcC,GAC5B,OAAQA,GACN,KAAKN,EACH,OAAOO,IAAWZ,EAAYM,GAAcN,EAAYO,IAE1D,KAAKF,EACH,OAAOO,IAAWZ,EAAYM,GAAcN,EAAYQ,IAE1D,QACE,IAAIK,EAAiB,GACjBC,EAAmC,GAAhBlF,KAAKE,SAAgB,EAM5C,OALIgF,GAAoB,EACtBD,EAAiBb,EAAYO,GACpBO,EAAmB,GAAKA,GAAoB,IACrDD,EAAiBb,EAAYQ,IAExBI,IAAWZ,EAAYM,GAAcO,EAAiBb,EAAYS,K,cCnDzEM,G,MAAS,mBCNU,YDOD,CACpBC,gBAAiB,UACjBtF,MAAO,SAHI,cCLO,SDUD,CACjBsF,gBAAiB,UACjBtF,MAAO,SAPI,GAWFuF,EAAU,SAAC,GAA4B,IAC9CC,EADoBlC,EAAyB,EAAzBA,KAAMmC,EAAmB,EAAnBA,KAE9B,OAFiD,EAAbR,QAGlC,KAAKN,EACHa,EAAc,mBACd,MACF,KAAKb,EACHa,EAAc,iBACd,MACF,KAAKb,EACHa,EAAc,yBACd,MACF,QACEA,EAAc,GAElB,OACE,yBAAKhF,UAAS,mBAAcgF,GAAe5E,MAAO6E,EAAOJ,EAAUI,QAAQC,GACxEpC,IAMMqC,EAAgB,SAAC,GAAe,IACrCC,EADoC,EAAZC,MACXhD,KAAI,SAACS,EAAMP,GAAP,OAAiB,kBAAC,EAAD,CAASO,KAAMA,EAAKwC,MAAOL,KAAMnC,EAAKmC,KAAMR,OAAQ3B,EAAK2B,OAAQ/B,IAAKH,OAC9G,OACE,yBAAKzB,GAAG,kBACLsE,I,iBE3BQG,G,OAdA,CACb,CACEC,QAAS,cACTC,KAAM,aACNC,ULuDW,WAAqB,IAAD,EACXC,cAAdF,EADyB,EACzBA,KAAMvD,EADmB,EACnBA,IADmB,EAEM0D,cAAWC,WAAWC,gBAArD3D,EAFyB,EAEzBA,cAAeC,EAFU,EAEVA,YAEvB,OACE,6BAASpC,UAAU,aACjB,kBAACiC,EAAD,CACEC,IAAKA,EACLE,YAAaA,EACbD,cAAeA,IAEjB,6BAASnC,UAAU,sBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+F,OAAK,EAACN,KAAMA,GACjB,4BAAKlC,EAAgBpB,GAAeR,SAASC,uBAE/C,kBAAC,IAAD,CAAO6D,KAAI,UAAKA,EAAL,aACT,kBAACzC,EAAD,CACEb,cAAeA,EACfC,YAAaA,UKxEzB,CACEoD,QAAS,UACTC,KAAM,YACNC,U,kDCFF,WAAYM,GAAQ,IAAD,8BACjB,cAAMA,IASRC,SAAW,WACL,EAAKC,MAAMpD,MACb,EAAKqD,UAAS,SAAAD,GAAK,MAAK,CACtBpD,KAAM,GACNsD,SAAS,GAAD,mBACHF,EAAME,UADH,CAEN,CACEd,OC3Bee,ED2BIH,EAAMpD,KC3BHuD,EAAIC,QD4B1BrB,KAAMiB,EAAMK,SACZ9B,OAAQyB,EAAMzB,WC7BC,IAAA4B,MDUN,EA0BnBG,aAAe,WACb,EAAKL,UAAS,SAAAD,GAAK,MAAK,CACtBpD,KAAM0B,EAAc0B,EAAMzB,aA1B5B,EAAKyB,MAAQ,CACXpD,KAAM,GACNsD,SAAU,GACVG,SFfmB,YEgBnB9B,OAAQN,GANO,E,qDAgCT,IAAD,OACP,OACE,6BAASnE,UAAU,kBACjB,yBAAKA,UAAU,+BACb,2BACEA,UAAU,wBACVsF,MAAOmB,KAAKP,MAAMpD,KAClB4D,YAAY,iHACZC,SAAU,SAAAC,GAAK,OAAI,EAAKT,SAAS,CAAErD,KAAM8D,EAAMC,OAAOvB,WAExD,4BACEtF,UAAU,yDACVgB,QAASyF,KAAKD,cAFhB,kFAMA,4BACExG,UAAU,qDACV8G,SAAUC,IAAQN,KAAKP,MAAMpD,MAC7B9B,QAASyF,KAAKR,UAHhB,2DASF,0BAAMjG,UAAU,SACd,2BACEgH,KAAK,QACLC,QFtEa,cEsEJR,KAAKP,MAAMK,SACpBI,SAAU,kBAAM,EAAKR,SAAS,CAAEI,SFvEnB,eEwEbzF,GAAG,iBAEL,2BAAOoG,QAAQ,gBAAf,oDACA,2BACEF,KAAK,QACLC,QF5EU,WE4EDR,KAAKP,MAAMK,SACpBI,SAAU,kBAAM,EAAKR,SAAS,CAAEI,SF7EtB,YE8EVzF,GAAG,cAEL,2BAAOoG,QAAQ,aAAf,yCFjFe,cEoFhBT,KAAKP,MAAMK,UACZ,0BAAMvG,UAAU,SACd,2BACEgH,KAAK,QACLC,QAASR,KAAKP,MAAMzB,SAAWN,EAC/BwC,SAAU,kBAAM,EAAKR,SAAS,CAAC1B,OAAQN,KACvCrD,GAAG,YAEL,2BAAOoG,QAAQ,WAAf,8CACA,2BACEF,KAAK,QACLC,QAASR,KAAKP,MAAMzB,SAAWN,EAC/BwC,SAAU,kBAAM,EAAKR,SAAS,CAAC1B,OAAQN,KACvCrD,GAAG,cAEL,2BAAOoG,QAAQ,aAAf,8CACA,2BACEF,KAAK,QACLC,QAASR,KAAKP,MAAMzB,SAAWN,EAC/BwC,SAAU,kBAAM,EAAKR,SAAS,CAAC1B,OAAQN,KACvCrD,GAAG,oBAEL,2BAAOoG,QAAQ,mBAAf,yCAGF,kBAAC,EAAD,CAAe7B,MAAOoB,KAAKP,MAAME,gB,GApGbe,aDIxBC,UAAU,KGbDC,EACK,iBADLA,EAEK,iBAFLA,EAGK,iBAqBLC,EAAc,kBAAM,SAACC,GAChC,OAH4BC,MAAM,0DAI/BC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUL,EAfqB,CACvCP,KAAMK,EACNQ,QAauCD,OACpCE,OAAM,SAACC,GAAD,OAAWR,EAXoB,CACxCP,KAAMK,SCQFW,G,yLAEFvB,KAAKT,MAAMsB,gB,qCAIXb,KAAKT,MAAMiC,aAAmC,OAAtBxB,KAAKT,MAAMkC,OAAkB,KAAO,Q,+BAGpD,IAAD,OACP,OACE,yBAAKpH,GAAG,sBACN,yBAAKd,UAAU,cACb,kBAAC,EAAD,MACCuF,EAAOlD,KAAI,SAAC8F,EAAG5F,GAAJ,OACV,kBAAC,IAAD,CACEvC,UAAU,mBACV0C,IAAKH,EACLC,GAAI2F,EAAE1C,MAEL0C,EAAEf,UAAY,0BAAMpH,UAAU,4BAAhB,UACduD,EAAgB,EAAKyC,MAAMkC,QAAQ9G,eAAeI,MAAM2G,EAAE3C,aAG/D,yBAAKxF,UAAU,WACf,0BACEA,UAAU,0BACVoI,MAAO7E,EAAgBkD,KAAKT,MAAMkC,QAAQ9G,eAAeG,oBACzDP,QAAS,kBAAM,EAAKiH,iBAEnB1E,EAAgBkD,KAAKT,MAAMkC,QAAQ/G,iBAGxC,6BAASnB,UAAU,eACjB,kBAAC,IAAD,KACGuF,EAAOlD,KAAI,SAAC8F,EAAG5F,GAAJ,OACV,kBAAC,IAAD,CACEG,IAAKH,EACLwD,MAAOoC,EAAEpC,MACTN,KAAM0C,EAAE1C,MAER,kBAAC0C,EAAEzC,UAAH,CAAawC,OAAQ,EAAKlC,MAAMkC,eAKxC,4BAAQlI,UAAU,cAAlB,2BACuB,IAAIqI,MAAOC,oB,GA/CxBnB,cAsDHoB,eAlES,SAAArC,GACtB,MAAO,CACLsC,QAAStC,EAAMJ,gBAAgB1D,YAC/B8F,OAAQhC,EAAMJ,gBAAgB3D,kBAIP,SAAAoF,GAAQ,MAAK,CACtCD,YAAa,kBAAMC,EAASD,MAC5BW,aAAc,SAACC,GAAD,OAAYX,EDhBA,SAACW,GAAD,MAAa,CACvClB,KAAMK,EACNQ,QAASK,GCc0BD,CAAaC,QAyDnCK,CAGbP,G,cCnFIS,EAAe,CACnBC,QAAS,GACTC,kBAAczD,EACd6C,WAAO7C,GAGImC,EACK,iBADLA,EAEK,iBAFLA,GAGI,gBAHJA,GAIW,uB,aCRlBoB,GAAe,CACnBG,UAAW,GACXC,oBAAqB,IAGVxB,GAAe,CAC1ByB,iBAAkB,mBAClBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,oBAAqB,uBCZvB,IAAMT,GAAe,CACnBU,MAAO,IAGI9B,GACG,eCFhB,IAAM+B,GAAe,CACnBhH,YAAa,GACbD,cAAe,MCCFkH,mBAAgB,CAE7BvD,gBDCK,WAAwD,IAA/BI,EAA8B,uDAAtBkD,GAAcE,EAAQ,uCAC5D,OAAQA,EAAOtC,MACb,KAAKK,EACH,OAAO,2BACFnB,GADL,IAEE9D,YAAakH,EAAOzB,UAGxB,KAAKR,EACH,OAAO,2BACFnB,GADL,IAEE/D,cAAemH,EAAOzB,UAG1B,QACE,OAAO3B,ICdXqD,cJMK,WAAsD,IAA/BrD,EAA8B,uDAAtBuC,EAAca,EAAQ,uCAC1D,OAAQA,EAAOtC,MACb,KAAKK,EACH,OAAO,2BACFnB,GADL,IAEEwC,QAAQ,YAAKY,EAAOzB,WAGxB,KAAKR,EACH,OAAO,2BACFnB,GADL,IAEEwC,QAAQ,GAAD,mBAAMxC,EAAMwC,SAAZ,CAAqBY,EAAOzB,YAGvC,KAAKR,GACH,OAAO,2BACFnB,GADL,IAEEwC,QAASxC,EAAMwC,QAAQc,QAAO,SAAAC,GAAC,OAAKA,EAAEC,OAAOJ,EAAOzB,cAGxD,KAAKR,GACH,OAAO,2BACFnB,GADL,IAEEyC,aAAcW,EAAOzB,UAGzB,QACE,OAAO3B,IIhCXyD,aHIK,WAAqD,IAA/BzD,EAA8B,uDAAtBuC,GAAca,EAAQ,uCACzD,OAAQA,EAAOtC,MACb,KAAKK,GAAayB,iBAChB,OAAO,2BACF5C,GADL,IAEE0C,UAAU,YAAKU,EAAOzB,WAG1B,KAAKR,GAAauC,YAChB,OAAO,2BACF1D,GADL,IAEE0C,UAAU,GAAD,mBAAM1C,EAAM0C,WAAZ,CAAuBU,EAAOzB,YAG3C,KAAKR,GAAa2B,iBAChB,OAAI9C,EAAM2C,oBAAoBzF,MAAK,SAAAyG,GAAK,OAAIA,IAAUP,EAAOzB,WACpD3B,EAEF,2BACFA,GADL,IAEE2C,oBAAqBiB,mBAAQ,GAAD,mBAAK5D,EAAM2C,qBAAX,CAAgCS,EAAOzB,UAAU,CAAC,YAGlF,KAAKR,GAAa4B,oBAChB,OAAO,2BACF/C,GADL,IAEE2C,oBAAqBiB,mBAAQ5D,EAAM2C,oBAAoBW,QAAO,SAAAK,GAAK,OAAIA,EAAM/G,OAASwG,EAAOzB,WAAU,CAAC,YAG5G,KAAKR,GAAa6B,oBAChB,OAAO,2BACFhD,GADL,IAEE2C,oBAAqB,KAGzB,QACE,OAAO3C,IGvCX6D,YFJK,WAAoD,IAA/B7D,EAA8B,uDAAtBuC,GAAca,EAAQ,uCACxD,OAAQA,EAAOtC,MACb,KAAKK,GACH,OAAO,2BACFnB,GADL,IAEEiD,MAAM,YAAKG,EAAOzB,WAGtB,QACE,OAAO3B,M,SGNA8D,I,OAAQC,YAAYC,GAAaC,YAAgBC,QAE9DC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGHO,SAASC,eAAe,U","file":"static/js/main.2cc6ae04.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport './Logo.scss'\r\n\r\nconst randomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nconst ImageLogo = ({ color, rotation }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n       className={rotation ? 'rotating' : 'normal'}\r\n       width=\"50px\"\r\n       height=\"50px\"\r\n       viewBox=\"0 0 32 32\"\r\n  >\r\n    <g>\r\n      <path\r\n        style={{\r\n          stroke: 'none',\r\n          fillRule: 'nonzero',\r\n          fill: color,\r\n          fillOpacity: 1,\r\n        }}\r\n        d=\"M 16 3.71875 L 15.375 4.21875 L 7.125 10.625 L 6.875 10.84375 L 6.78125 11.15625 L 4.03125 21.25 L 3.8125 22.03125 L 16 28.125 L 28.1875 22.03125 L 27.96875 21.25 L 25.21875 11.15625 L 25.125 10.84375 L 24.875 10.625 L 16.625 4.21875 Z M 15 7.0625 L 15 10 L 11.21875 10 Z M 17 7.0625 L 20.78125 10 L 17 10 Z M 9.0625 12 L 14 12 L 10.40625 16.78125 Z M 18 12 L 22.9375 12 L 21.59375 16.78125 Z M 16 12.6875 L 20 18 L 12 18 Z M 7.8125 15 L 8.8125 18.5 L 6.5625 19.625 Z M 24.1875 15 L 25.4375 19.625 L 23.1875 18.5 Z M 12 20 L 20 20 L 16 25.3125 Z M 9.6875 20.28125 L 12.625 24.1875 L 7.25 21.5 Z M 22.3125 20.28125 L 24.75 21.5 L 19.375 24.1875 Z M 22.3125 20.28125 \"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport const Logo = () => {\r\n  let [color, changeColor] = useState('#fff')\r\n  let [rotation, setRotation] = useState(false)\r\n  return (\r\n    <div id=\"logo\"\r\n       onMouseEnter={() => changeColor(randomColor())}\r\n       onClick={() => {\r\n         setRotation(true)\r\n         setTimeout(() => {\r\n           setRotation(false)\r\n           changeColor(randomColor())\r\n         }, 500)\r\n       }}\r\n    >\r\n      <ImageLogo color={color} rotation={rotation}/>\r\n      <div className=\"caption\" style={{ color }}>Quenta</div>\r\n    </div>\r\n  )\r\n}","export const en = {\r\n  LOCALE_CAPTION: 'EN',\r\n  navbarCaptions: {\r\n    CHARACTER_GALLERY: 'Character gallery',\r\n    NAME_GEN: 'Name generator',\r\n    LANGUAGE_TOGGLE_MSG: 'Переключить на русский язык',\r\n    links: {\r\n      charCatalog: 'Character catalog',\r\n      nameGen: 'Name generator',\r\n    }\r\n  },\r\n  charBook: {\r\n    SELECT_CHARACTER_MSG: 'Select a character...',\r\n    CLASS_LABEL: 'Class:',\r\n    RACE_LABEL: 'Race:',\r\n    SOURCE_LABEL: 'Art by:',\r\n  },\r\n}\r\n\r\nexport const ru = {\r\n  LOCALE_CAPTION: 'RU',\r\n  navbarCaptions: {\r\n    CHARACTER_GALLERY: 'Каталог персонажей',\r\n    NAME_GEN: 'Генератор имён',\r\n    LANGUAGE_TOGGLE_MSG: 'Switch to English',\r\n    links: {\r\n      charCatalog: 'Каталог персонажей',\r\n      nameGen: 'Генератор имён',\r\n    }\r\n  },\r\n  charBook: {\r\n    SELECT_CHARACTER_MSG: 'Выберите персонажа...',\r\n    CLASS_LABEL: 'Класс:',\r\n    RACE_LABEL: 'Раса:',\r\n    SOURCE_LABEL: 'Источник:',\r\n  },\r\n}","import React from 'react'\r\nimport { Switch, Route, NavLink, useParams, useRouteMatch } from 'react-router-dom'\r\nimport { useStore } from 'react-redux'\r\nimport * as LocaleConstants from 'localization'\r\n\r\nimport './CharBook.scss'\r\n\r\nfunction Sidebar({ url, currentLocale, charEntries }) {\r\n  return (\r\n    <aside className=\"char-book__sidebar\">\r\n      {charEntries.map((character, index) => (\r\n        <NavLink\r\n          to={`${url}/${character.id}`}\r\n          className=\"char-book__preview-block\"\r\n          activeClassName=\"active\"\r\n          key={index}\r\n        >\r\n          <img className=\"char-book__preview-image\" src={character.tokenImg} alt={character.name}/>\r\n          <span className=\"char-book__preview-name\">{character.captions[currentLocale].name}</span>\r\n        </NavLink>\r\n      ))}\r\n    </aside>\r\n  )\r\n}\r\n\r\nfunction CharacterInfo({ currentLocale, charEntries }) {\r\n  const { charId } = useParams()\r\n  const entry = charEntries.find(character => character.id === charId)\r\n\r\n  if (!entry) {\r\n    return <h3>Invalid entry</h3>\r\n  }\r\n  return (\r\n    <>\r\n      <span className=\"char-book__character-caption\">\r\n        {entry.captions[currentLocale].name}\r\n      </span>\r\n      <div className=\"char-book__main-image-wrapper\">\r\n        <img\r\n          src={entry.mainImg}\r\n          alt={entry.captions[currentLocale].name}\r\n          className=\"char-book__main-image\"\r\n        />\r\n        {entry.artSource &&\r\n          <div>\r\n            <span className=\"char-book__art-source\">\r\n              {LocaleConstants[currentLocale].charBook.SOURCE_LABEL}\r\n            </span>\r\n            &nbsp;\r\n            <a href={entry.artSource.link} className=\"char-book__art-source-link\">\r\n              {entry.artSource.name || entry.artSource.link}\r\n            </a>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div><strong>{LocaleConstants[currentLocale].charBook.CLASS_LABEL}</strong> {entry.captions[currentLocale].class} ({entry.captions[currentLocale].subclass})</div>\r\n      <div><strong>{LocaleConstants[currentLocale].charBook.RACE_LABEL}</strong> {entry.captions[currentLocale].race}</div>\r\n      <div>{entry.captions[currentLocale].bio}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function CharBook() {\r\n  const { path, url } = useRouteMatch()\r\n  const { currentLocale, charEntries } = useStore().getState().charBookReducer\r\n\r\n  return (\r\n    <section className=\"char-book\">\r\n      <Sidebar\r\n        url={url}\r\n        charEntries={charEntries}\r\n        currentLocale={currentLocale}\r\n      />\r\n      <section className=\"char-book__content\">\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <h3>{LocaleConstants[currentLocale].charBook.SELECT_CHARACTER_MSG}</h3>\r\n          </Route>\r\n          <Route path={`${path}/:charId`}>\r\n            <CharacterInfo\r\n              currentLocale={currentLocale}\r\n              charEntries={charEntries}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </section>\r\n    </section>\r\n  )\r\n}","/**\r\n * Возвращает случайное число в заданном диапазоне\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nexport const randomIn = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n/**\r\n * Получает случайный элемент переданного массива\r\n * @param {Array<any>} array\r\n */\r\nexport const randomInArr = array => array[randomIn(0, array.length - 1)]","import capitalize from 'lodash/capitalize'\r\nimport { randomInArr } from '../utils/number.util'\r\n\r\n/**\r\n * Перечисление возможных полов персонажа\r\n */\r\nexport const Genders = {\r\n  MALE: 'Мужской',\r\n  FEMALE: 'Женский',\r\n  OTHER: 'Другой'\r\n}\r\n\r\n/*\r\n * Генератор имён. \r\n * TODO: Должно быть несколько способов генерить имена:\r\n * - какой-то набор имён будет захардкожен в приложении\r\n * - сложение некоторых захардкоженных кусков имён\r\n * - загрузка внешних словарей с именами\r\n */\r\nconst firstParts = [\r\n  'ака', 'алас', 'али', 'анг', 'ар', 'гэл', 'де', 'дем', 'джакс', 'кай', 'карс', 'ки', 'кил', 'кин', 'куман', 'лагр',\r\n  'леп', 'лито', 'лора', 'мек', 'мира', 'мон', 'нира', 'о', 'пара', 'пирс', 'ранд', 'рем', 'рол', 'рон', 'сар', 'так',\r\n  'тари', 'тор', 'тэр', 'ун', 'фел', 'фес', 'фен', 'фрел', 'цум', 'эл'\r\n]\r\n\r\nconst maleNameParts = [\r\n  'дил', 'шим', 'кай', 'мэй', 'эль', 'ол', 'хим', 'рой', 'ронд', 'он', 'сим', 'гранж', 'филд', 'талас', 'стер',\r\n  'зул', 'кард', 'кил', 'дес', 'ранг', 'рел', 'рен', 'тир', 'огил', 'зис', 'тан', 'тео', 'лес', 'ст', 'вит', 'пе', 'теск', 'ольм',\r\n  'тен', 'мон', 'зен', 'ис', 'ус', 'нус', 'нис', 'гус', 'нус', 'анс', 'альд', 'бальд', 'мир', 'лир', 'тум'\r\n]\r\n\r\nconst femaleNameParts = [\r\n  'дина', 'шима', 'кая', 'мэй', 'эль', 'кина', 'энь', 'уфа', 'уха', 'тесс', 'эсс', 'ола', 'ра', 'вен', 'ада', 'бра', 'иль', 'да',\r\n  'лия', 'ья', 'ия', 'теса', 'ла', 'мара', 'на', 'минель', 'леса', 'иса', 'тея', 'тер', 'тра', 'нья', 'ктея', 'сея', 'айя'\r\n]\r\n\r\nconst otherNameParts = [\r\n  'кет', 'зе', 'мезе', 'ше', 'пе', 'льпе', 'фес', 'сис', 'фе', 'мо', 'умо', 'уно', 'пург', 'тарпо', 'ольмо', 'зефф', 'черс',\r\n  'тур', 'омо', 'рене', 'рено', 'шефе', 'оссе', 'харж', 'бре', 'те', 'ги', 'иги', 'зулу', 'зиги'\r\n]\r\n\r\nexport function getRandomName(gender) {\r\n  switch (gender) {\r\n    case Genders.MALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(maleNameParts))\r\n    }\r\n    case Genders.FEMALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(femaleNameParts))\r\n    }\r\n    default: {\r\n      let twistParameter = '' // здесь присутствует возможность расширения имени дополнительным слогом\r\n      let twistCoefficient = Math.random() * 10 + 1\r\n      if (twistCoefficient <= 1) {\r\n        twistParameter = randomInArr(maleNameParts)\r\n      } else if (twistCoefficient > 1 && twistCoefficient <= 3) {\r\n        twistParameter = randomInArr(femaleNameParts)\r\n      }\r\n      return capitalize(randomInArr(firstParts) + twistParameter + randomInArr(otherNameParts))\r\n    }\r\n  }\r\n}","import React from 'react'\r\nimport * as NameMode from '../../../model/view/name-mode'\r\nimport { Genders } from '../../../logic/name-generator'\r\n\r\nimport './NameContainer.scss'\r\n\r\nconst TagStyles = {\r\n  [NameMode.CHARACTER]: {\r\n    backgroundColor: '#286958',\r\n    color: '#fff'\r\n  },\r\n  [NameMode.OBJECT]: {\r\n    backgroundColor: '#3a4f69',\r\n    color: '#fff'\r\n  }\r\n}\r\n\r\nexport const NameTag = ({ name, mode, gender }) => {\r\n  let genderClass\r\n  switch (gender) {\r\n    case Genders.FEMALE:\r\n      genderClass = 'name-tag--female'\r\n      break\r\n    case Genders.MALE:\r\n      genderClass = 'name-tag--male'\r\n      break\r\n    case Genders.OTHER:\r\n      genderClass = 'name-tag--other-gender'\r\n      break\r\n    default:\r\n      genderClass = ''\r\n  }\r\n  return (\r\n    <div className={`name-tag ${genderClass}`} style={mode ? TagStyles[mode] : undefined}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\n// TODO this supposed to be connected to reducer\r\nexport const NameContainer = ({ names }) => {\r\n  const tags = names.map((name, index) => <NameTag name={name.value} mode={name.mode} gender={name.gender} key={index}/>)\r\n  return (\r\n    <div id=\"name-container\">\r\n      {tags}\r\n    </div>\r\n  )\r\n}","export const CHARACTER = 'CHARACTER'\r\nexport const OBJECT = 'OBJECT'","import CharBook from './char-book/CharBook'\r\nimport NameGenerator from './name-generator/NameGenerator'\r\n\r\nconst routes = [\r\n  {\r\n    textKey: 'charCatalog',\r\n    path: '/char-book',\r\n    component: CharBook,\r\n  },\r\n  {\r\n    textKey: 'nameGen',\r\n    path: '/name-gen',\r\n    component: NameGenerator,\r\n    isLegacy: true\r\n  },\r\n]\r\n\r\nexport default routes","import React, { Component } from 'react'\r\nimport { processName } from '../../utils/names.util'\r\nimport { Genders, getRandomName } from '../../logic/name-generator'\r\nimport { NameContainer } from './name-container/NameContainer'\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport * as NameMode from '../../model/view/name-mode'\r\nimport './NameGenerator.scss'\r\n\r\nclass NameGenerator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      allNames: [],\r\n      nameMode: NameMode.CHARACTER,\r\n      gender: Genders.MALE\r\n    }\r\n  }\r\n\r\n  saveName = () => {\r\n    if (this.state.name) {\r\n      this.setState(state => ({\r\n        name: '',\r\n        allNames: [\r\n          ...state.allNames,\r\n          {\r\n            value: processName(state.name),\r\n            mode: state.nameMode,\r\n            gender: state.gender\r\n          }\r\n        ]\r\n      }))\r\n    }\r\n  }\r\n\r\n  generateName = () => {\r\n    this.setState(state => ({\r\n      name: getRandomName(state.gender)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"name-generator\">\r\n        <div className=\"name-generator__input-group\">\r\n          <input\r\n            className=\"name-generator__input\"\r\n            value={this.state.name}\r\n            placeholder=\"Введите имя/название\"\r\n            onChange={event => this.setState({ name: event.target.value })}\r\n          />\r\n          <button\r\n            className=\"name-generator__button name-generator__button-generate\"\r\n            onClick={this.generateName}\r\n          >\r\n            Сгенерировать\r\n          </button>\r\n          <button\r\n            className=\"name-generator__button name-generator__button-save\"\r\n            disabled={isEmpty(this.state.name)}\r\n            onClick={this.saveName}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </div>\r\n\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.CHARACTER}\r\n            onChange={() => this.setState({ nameMode: NameMode.CHARACTER })}\r\n            id=\"rb-character\"\r\n          />\r\n          <label htmlFor=\"rb-character\">Персонаж</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.OBJECT}\r\n            onChange={() => this.setState({ nameMode: NameMode.OBJECT })}\r\n            id=\"rb-object\"\r\n          />\r\n          <label htmlFor=\"rb-object\">Объект</label>\r\n        </form>\r\n\r\n        {this.state.nameMode === NameMode.CHARACTER &&\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.MALE}\r\n            onChange={() => this.setState({gender: Genders.MALE})}\r\n            id=\"rb-male\"\r\n          />\r\n          <label htmlFor=\"rb-male\">Мужской</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.FEMALE}\r\n            onChange={() => this.setState({gender: Genders.FEMALE})}\r\n            id=\"rb-female\"\r\n          />\r\n          <label htmlFor=\"rb-female\">Женский</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.OTHER}\r\n            onChange={() => this.setState({gender: Genders.OTHER})}\r\n            id=\"rb-other-gender\"\r\n          />\r\n          <label htmlFor=\"rb-other-gender\">Другой</label>\r\n        </form>\r\n        }\r\n        <NameContainer names={this.state.allNames} />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NameGenerator","export const processName = str => str.trim()","export const ACTION_TYPES = {\r\n  ENTRIES_LOADED: 'ENTRIES_LOADED',\r\n  ENTRY_LOAD_ERR: 'ENTRY_LOAD_ERR',\r\n  LOCALE_CHANGED: 'LOCALE_CHANGED'\r\n}\r\n\r\n// ***** Action creators *****\r\nexport const changeLocale = (locale) => ({\r\n  type: ACTION_TYPES.LOCALE_CHANGED,\r\n  payload: locale\r\n})\r\n\r\nexport const saveEntries = (entries) => ({\r\n  type: ACTION_TYPES.ENTRIES_LOADED,\r\n  payload: entries\r\n})\r\n\r\nexport const errorLoadingEntries = () => ({\r\n  type: ACTION_TYPES.ENTRY_LOAD_ERR\r\n})\r\n\r\n// ***** API *****\r\nconst fetchCharacters = () => fetch('https://i-madness.github.io/api/characters/oc/ocs.json')\r\n\r\nexport const loadEntries = () => (dispatch) => {\r\n  return fetchCharacters()\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch(saveEntries(data)))\r\n    .catch((error) => dispatch(errorLoadingEntries()))\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Logo } from './logo/Logo'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\"\r\nimport routes from './routes'\r\nimport { loadEntries, changeLocale } from 'reducers/char-book.actions'\r\nimport * as LocaleConstants from 'localization'\r\n\r\nimport './App.scss'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    entries: state.charBookReducer.charEntries,\r\n    locale: state.charBookReducer.currentLocale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadEntries: () => dispatch(loadEntries()),\r\n  changeLocale: (locale) => dispatch(changeLocale(locale))\r\n})\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.loadEntries()\r\n  }\r\n\r\n  changeLocale() {\r\n    this.props.changeLocale(this.props.locale === 'en' ? 'ru' : 'en')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"application-layout\">\r\n        <nav className=\"app-header\">\r\n          <Logo />\r\n          {routes.map((r, index) => (\r\n            <NavLink\r\n              className=\"app-header__link\"\r\n              key={index}\r\n              to={r.path}\r\n            >\r\n              {r.isLegacy && <span className=\"app-header__legacy-label\">legacy</span>}\r\n              {LocaleConstants[this.props.locale].navbarCaptions.links[r.textKey]}\r\n            </NavLink>\r\n          ))}\r\n          <div className=\"spacer\"/>\r\n          <span\r\n            className=\"app-header__lang-switch\"\r\n            title={LocaleConstants[this.props.locale].navbarCaptions.LANGUAGE_TOGGLE_MSG}\r\n            onClick={() => this.changeLocale()}\r\n          >\r\n            {LocaleConstants[this.props.locale].LOCALE_CAPTION}\r\n          </span>\r\n        </nav>\r\n        <article className=\"app-content\">\r\n          <Switch>\r\n            {routes.map((r, index) => (\r\n              <Route\r\n                key={index}\r\n                exact={r.exact}\r\n                path={r.path}\r\n              >\r\n                <r.component locale={this.props.locale} />\r\n              </Route>\r\n            ))}\r\n          </Switch>\r\n        </article>\r\n        <footer className=\"app-footer\">\r\n          © V.Scarlet, 2019 - {new Date().getFullYear()}\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)","const InitialState = {\r\n  quentas: [],\r\n  quentaToEdit: undefined,\r\n  error: undefined\r\n}\r\n\r\nexport const ACTION_TYPES = {\r\n  QUENTAS_LOADED: 'QUENTAS_LOADED',\r\n  QUENTA_CREATED: 'QUENTA_CREATED',\r\n  QUENTA_DELETE: 'QUENTA_DELETE',\r\n  QUENTA_START_EDITING: 'QUENTA_START_EDITING'\r\n}\r\n\r\n/**\r\n * Возвращет объект состояния в соответствии с выполнением определённых действий с квентами\r\n */\r\nexport function quentaReducer(state = InitialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.QUENTAS_LOADED: {\r\n      return {\r\n        ...state,\r\n        quentas: [...action.payload]\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_CREATED: {\r\n      return {\r\n        ...state,\r\n        quentas: [...state.quentas, action.payload]\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_DELETE: {\r\n      return {\r\n        ...state,\r\n        quentas: state.quentas.filter(q => !q.equals(action.payload))\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_START_EDITING: {\r\n      return {\r\n        ...state,\r\n        quentaToEdit: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { orderBy } from 'lodash'\r\n\r\nconst InitialState = {\r\n  skillsets: [],\r\n  currentQuentaSkills: []\r\n}\r\n\r\nexport const ACTION_TYPES = {\r\n  SKILLSETS_LOADED: 'SKILLSETS_LOADED',\r\n  SKILLSET_ADDED: 'SKILLSET_ADDED',\r\n  QUENTA_ADD_SKILL: 'QUENTA_ADD_SKILL',\r\n  QUENTA_REMOVE_SKILL: 'QUENTA_REMOVE_SKILL',\r\n  QUENTA_CLEAR_SKILLS: 'QUENTA_CLEAR_SKILLS'\r\n}\r\n\r\nexport function skillReducer(state = InitialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SKILLSETS_LOADED: {\r\n      return {\r\n        ...state,\r\n        skillsets: [...action.payload]\r\n      }\r\n    }\r\n    case ACTION_TYPES.SKILL_ADDED: {\r\n      return {\r\n        ...state,\r\n        skillsets: [...state.skillsets, action.payload]\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_ADD_SKILL: {\r\n      if (state.currentQuentaSkills.find(skill => skill === action.payload)) {\r\n        return state\r\n      }\r\n      return {\r\n        ...state,\r\n        currentQuentaSkills: orderBy([...state.currentQuentaSkills, action.payload], ['level'])\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_REMOVE_SKILL: {\r\n      return {\r\n        ...state,\r\n        currentQuentaSkills: orderBy(state.currentQuentaSkills.filter(skill => skill.name !== action.payload), ['level'])\r\n      }\r\n    }\r\n    case ACTION_TYPES.QUENTA_CLEAR_SKILLS: {\r\n      return {\r\n        ...state,\r\n        currentQuentaSkills: []\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","const InitialState = {\r\n  races: []\r\n}\r\n\r\nexport const ACTION_TYPES = {\r\n  RACES_LOADED: 'RACES_LOADED'\r\n}\r\n\r\nexport function raceReducer(state = InitialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.RACES_LOADED: {\r\n      return {\r\n        ...state,\r\n        races: [...action.payload]\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { ACTION_TYPES } from './char-book.actions'\r\n\r\n\r\nconst initialState = {\r\n  charEntries: [],\r\n  currentLocale: 'en'\r\n}\r\n\r\n// technically is not required but eventually I might implement more advanced functionality in the app\r\nexport function charBookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.ENTRIES_LOADED: {\r\n      return {\r\n        ...state,\r\n        charEntries: action.payload\r\n      }\r\n    }\r\n    case ACTION_TYPES.LOCALE_CHANGED: {\r\n      return {\r\n        ...state,\r\n        currentLocale: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { quentaReducer } from './quenta.reducer'\r\nimport { skillReducer } from './skill.reducer'\r\nimport { raceReducer } from './race.reducer'\r\nimport { charBookReducer } from './char-book.reducer'\r\n\r\nexport default combineReducers({\r\n  // char book\r\n  charBookReducer,\r\n  // generator\r\n  quentaReducer,\r\n  skillReducer,\r\n  raceReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './index.scss'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App/>\r\n    </Router>\r\n  </Provider>\r\n), document.getElementById('root'))"],"sourceRoot":""}