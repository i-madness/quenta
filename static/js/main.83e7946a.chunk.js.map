{"version":3,"sources":["components/logo/Logo.jsx","components/char-book/CharBook.jsx","utils/number.util.js","logic/name-generator.js","components/name-generator/name-container/NameContainer.jsx","model/view/name-mode.js","components/routes.js","components/name-generator/NameGenerator.jsx","utils/names.util.js","components/App.jsx","index.js"],"names":["randomColor","color","i","Math","floor","random","ImageLogo","rotation","xmlns","className","width","height","viewBox","style","stroke","fillRule","fill","fillOpacity","d","Logo","useState","changeColor","setRotation","id","onMouseEnter","onClick","setTimeout","exampleChars","name","icon","text","Sidebar","url","Object","entries","map","character","index","to","key","src","alt","CharacterInfo","charId","useParams","randomInArr","array","min","max","length","Genders","firstParts","maleNameParts","femaleNameParts","otherNameParts","getRandomName","gender","capitalize","twistParameter","twistCoefficient","TagStyles","backgroundColor","NameTag","genderClass","mode","undefined","NameContainer","tags","names","value","routes","path","component","useRouteMatch","exact","props","saveName","state","setState","allNames","str","trim","nameMode","generateName","this","placeholder","onChange","event","target","disabled","isEmpty","type","checked","htmlFor","Component","App","r","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"8VAIMA,G,MAAc,WAGlB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,IAGHK,EAAY,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAOM,EAAV,EAAUA,SAAV,OAChB,yBAAKC,MAAM,6BACNC,UAAWF,EAAW,WAAa,SACnCG,MAAM,OACNC,OAAO,OACPC,QAAQ,aAEX,2BACE,0BACEC,MAAO,CACLC,OAAQ,OACRC,SAAU,UACVC,KAAMf,EACNgB,YAAa,GAEfC,EAAE,iqBAMGC,EAAO,WAAO,IAAD,EACGC,mBAAS,QADZ,mBACnBnB,EADmB,KACZoB,EADY,OAEMD,oBAAS,GAFf,mBAEnBb,EAFmB,KAETe,EAFS,KAGxB,OACE,yBAAKC,GAAG,OACLC,aAAc,kBAAMH,EAAYrB,MAChCyB,QAAS,WACPH,GAAY,GACZI,YAAW,WACTJ,GAAY,GACZD,EAAYrB,OACX,OAGN,kBAAC,EAAD,CAAWC,MAAOA,EAAOM,SAAUA,IACnC,yBAAKE,UAAU,UAAUI,MAAO,CAAEZ,UAAlC,Y,OC5CA0B,G,MAAe,CACnB,MAAS,CACPC,KAAM,uCACNC,KAAM,qCACNC,KAAM,sKAER,QAAW,CACTF,KAAM,6CACNC,KAAM,qCACNC,KAAM,2KAER,SAAY,CACVF,KAAM,mDACNC,KAAM,qCACNC,KAAM,iHAER,eAAgB,CACdF,KAAM,oGACNC,KAAM,qCACNC,KAAM,8LAER,aAAc,CACZF,KAAM,wFACNC,KAAM,qCACNC,KAAM,sKAIV,SAASC,EAAT,GAA2B,IAARC,EAAO,EAAPA,IACjB,OACE,2BAAOvB,UAAU,sBACdwB,OAAOC,QAAQP,GAAcQ,KAAI,SAACC,EAAWC,GAAZ,OAChC,kBAAC,IAAD,CACEC,GAAE,UAAKN,EAAL,YAAYI,EAAU,IACxB3B,UAAU,2BACV8B,IAAKF,GAEL,yBAAK5B,UAAU,2BAA2B+B,IAAKJ,EAAU,GAAGP,KAAMY,IAAKL,EAAU,GAAGR,OACpF,0BAAMnB,UAAU,2BAA2B2B,EAAU,GAAGR,WAOlE,SAASc,IAAiB,IAChBC,EAAWC,cAAXD,OACFP,EAAYT,EAAagB,GAE/B,OACE,oCACE,4BAAKP,EAAUR,MACf,6BAAMQ,EAAUN,O,6BC9CTe,EAAc,SAAAC,GAAK,OAAIA,GANXC,EAM0B,EANrBC,EAMwBF,EAAMG,OAAS,EAN/B9C,KAAKC,MAAMD,KAAKE,UAAY2C,EAAMD,EAAM,IAAMA,IAA5D,IAACA,EAAKC,GCCjBE,EACL,6CADKA,EAEH,6CAFGA,EAGJ,uCAUHC,EAAa,CACjB,qBAAO,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,eAAM,qBAAO,iCAAS,qBAAO,2BAAQ,eAAM,qBAAO,qBAAO,iCAAS,2BAC5G,qBAAO,2BAAQ,2BAAQ,qBAAO,2BAAQ,qBAAO,2BAAQ,SAAK,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,qBAC9G,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,gBAG5DC,EAAgB,CACpB,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,2BAAQ,eAAM,qBAAO,iCAAS,2BAAQ,iCAAS,2BACtG,qBAAO,2BAAQ,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,eAAM,2BAAQ,2BACzH,qBAAO,qBAAO,qBAAO,eAAM,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,iCAAS,qBAAO,qBAAO,sBAG/FC,EAAkB,CACtB,2BAAQ,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,eAC1H,qBAAO,eAAM,eAAM,2BAAQ,eAAM,2BAAQ,eAAM,uCAAU,2BAAQ,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,sBAG/GC,EAAiB,CACrB,qBAAO,eAAM,2BAAQ,eAAM,eAAM,2BAAQ,qBAAO,qBAAO,eAAM,eAAM,qBAAO,qBAAO,2BAAQ,iCAAS,iCAAS,2BAAQ,2BACnH,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,eAAM,eAAM,qBAAO,2BAAQ,4BAGnF,SAASC,EAAcC,GAC5B,OAAQA,GACN,KAAKN,EACH,OAAOO,IAAWZ,EAAYM,GAAcN,EAAYO,IAE1D,KAAKF,EACH,OAAOO,IAAWZ,EAAYM,GAAcN,EAAYQ,IAE1D,QACE,IAAIK,EAAiB,GACjBC,EAAmC,GAAhBxD,KAAKE,SAAgB,EAM5C,OALIsD,GAAoB,EACtBD,EAAiBb,EAAYO,GACpBO,EAAmB,GAAKA,GAAoB,IACrDD,EAAiBb,EAAYQ,IAExBI,IAAWZ,EAAYM,GAAcO,EAAiBb,EAAYS,K,cCnDzEM,G,MAAS,mBCNU,YDOD,CACpBC,gBAAiB,UACjB5D,MAAO,SAHI,cCLO,SDUD,CACjB4D,gBAAiB,UACjB5D,MAAO,SAPI,GAWF6D,EAAU,SAAC,GAA4B,IAC9CC,EADoBnC,EAAyB,EAAzBA,KAAMoC,EAAmB,EAAnBA,KAE9B,OAFiD,EAAbR,QAGlC,KAAKN,EACHa,EAAc,mBACd,MACF,KAAKb,EACHa,EAAc,iBACd,MACF,KAAKb,EACHa,EAAc,yBACd,MACF,QACEA,EAAc,GAElB,OACE,yBAAKtD,UAAS,mBAAcsD,GAAelD,MAAOmD,EAAOJ,EAAUI,QAAQC,GACxErC,IAMMsC,EAAgB,SAAC,GAAe,IACrCC,EADoC,EAAZC,MACXjC,KAAI,SAACP,EAAMS,GAAP,OAAiB,kBAAC,EAAD,CAAST,KAAMA,EAAKyC,MAAOL,KAAMpC,EAAKoC,KAAMR,OAAQ5B,EAAK4B,OAAQjB,IAAKF,OAC9G,OACE,yBAAKd,GAAG,kBACL4C,I,iBE1BQG,G,MAfA,CAEb,CACExC,KAAM,0GACNyC,KAAM,aAENC,ULqDW,WAAqB,IAAD,EACXC,cAAdF,EADyB,EACzBA,KAAMvC,EADmB,EACnBA,IAEd,OACE,6BAASvB,UAAU,aACjB,kBAACsB,EAAD,CAASC,IAAKA,IACd,6BAASvB,UAAU,sBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiE,OAAK,EAACH,KAAMA,GACjB,0DAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,aACT,kBAAC7B,EAAD,YK/DV,CACEZ,KAAM,2FACNyC,KAAM,YACNC,U,kDCJF,WAAYG,GAAQ,IAAD,8BACjB,cAAMA,IASRC,SAAW,WACL,EAAKC,MAAMjD,MACb,EAAKkD,UAAS,SAAAD,GAAK,MAAK,CACtBjD,KAAM,GACNmD,SAAS,GAAD,mBACHF,EAAME,UADH,CAEN,CACEV,OC3BeW,ED2BIH,EAAMjD,KC3BHoD,EAAIC,QD4B1BjB,KAAMa,EAAMK,SACZ1B,OAAQqB,EAAMrB,WC7BC,IAAAwB,MDUN,EA0BnBG,aAAe,WACb,EAAKL,UAAS,SAAAD,GAAK,MAAK,CACtBjD,KAAM2B,EAAcsB,EAAMrB,aA1B5B,EAAKqB,MAAQ,CACXjD,KAAM,GACNmD,SAAU,GACVG,SFfmB,YEgBnB1B,OAAQN,GANO,E,qDAgCT,IAAD,OACP,OACE,6BAASzC,UAAU,kBACjB,yBAAKA,UAAU,+BACb,2BACEA,UAAU,wBACV4D,MAAOe,KAAKP,MAAMjD,KAClByD,YAAY,iHACZC,SAAU,SAAAC,GAAK,OAAI,EAAKT,SAAS,CAAElD,KAAM2D,EAAMC,OAAOnB,WAExD,4BACE5D,UAAU,yDACVgB,QAAS2D,KAAKD,cAFhB,kFAMA,4BACE1E,UAAU,qDACVgF,SAAUC,IAAQN,KAAKP,MAAMjD,MAC7BH,QAAS2D,KAAKR,UAHhB,2DASF,0BAAMnE,UAAU,SACd,2BACEkF,KAAK,QACLC,QFtEa,cEsEJR,KAAKP,MAAMK,SACpBI,SAAU,kBAAM,EAAKR,SAAS,CAAEI,SFvEnB,eEwEb3D,GAAG,iBAEL,2BAAOsE,QAAQ,gBAAf,oDACA,2BACEF,KAAK,QACLC,QF5EU,WE4EDR,KAAKP,MAAMK,SACpBI,SAAU,kBAAM,EAAKR,SAAS,CAAEI,SF7EtB,YE8EV3D,GAAG,cAEL,2BAAOsE,QAAQ,aAAf,yCFjFe,cEoFhBT,KAAKP,MAAMK,UACZ,0BAAMzE,UAAU,SACd,2BACEkF,KAAK,QACLC,QAASR,KAAKP,MAAMrB,SAAWN,EAC/BoC,SAAU,kBAAM,EAAKR,SAAS,CAACtB,OAAQN,KACvC3B,GAAG,YAEL,2BAAOsE,QAAQ,WAAf,8CACA,2BACEF,KAAK,QACLC,QAASR,KAAKP,MAAMrB,SAAWN,EAC/BoC,SAAU,kBAAM,EAAKR,SAAS,CAACtB,OAAQN,KACvC3B,GAAG,cAEL,2BAAOsE,QAAQ,aAAf,8CACA,2BACEF,KAAK,QACLC,QAASR,KAAKP,MAAMrB,SAAWN,EAC/BoC,SAAU,kBAAM,EAAKR,SAAS,CAACtB,OAAQN,KACvC3B,GAAG,oBAEL,2BAAOsE,QAAQ,mBAAf,yCAGF,kBAAC,EAAD,CAAezB,MAAOgB,KAAKP,MAAME,gB,GApGbe,gBEmCbC,G,6KA/BX,OACE,yBAAKxE,GAAG,sBACN,yBAAKd,UAAU,cACb,kBAAC,EAAD,MACC6D,EAAOnC,KAAI,SAAC6D,EAAG3D,GAAJ,OACV,kBAAC,IAAD,CAAM5B,UAAU,mBAAmB8B,IAAKF,EAAOC,GAAI0D,EAAEzB,MAClDyB,EAAElE,UAIT,6BAASrB,UAAU,eACjB,kBAAC,IAAD,KACG6D,EAAOnC,KAAI,SAAC6D,EAAG3D,GAAJ,OACV,kBAAC,IAAD,CACEE,IAAKF,EACLqC,MAAOsB,EAAEtB,MACTH,KAAMyB,EAAEzB,MAER,kBAACyB,EAAExB,UAAH,YAKR,4BAAQ/D,UAAU,cAAlB,2BACuB,IAAIwF,MAAOC,oB,GA1BxBJ,c,MCJlBK,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.83e7946a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport './Logo.scss'\r\n\r\nconst randomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nconst ImageLogo = ({ color, rotation }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n       className={rotation ? 'rotating' : 'normal'}\r\n       width=\"50px\"\r\n       height=\"50px\"\r\n       viewBox=\"0 0 32 32\"\r\n  >\r\n    <g>\r\n      <path\r\n        style={{\r\n          stroke: 'none',\r\n          fillRule: 'nonzero',\r\n          fill: color,\r\n          fillOpacity: 1,\r\n        }}\r\n        d=\"M 16 3.71875 L 15.375 4.21875 L 7.125 10.625 L 6.875 10.84375 L 6.78125 11.15625 L 4.03125 21.25 L 3.8125 22.03125 L 16 28.125 L 28.1875 22.03125 L 27.96875 21.25 L 25.21875 11.15625 L 25.125 10.84375 L 24.875 10.625 L 16.625 4.21875 Z M 15 7.0625 L 15 10 L 11.21875 10 Z M 17 7.0625 L 20.78125 10 L 17 10 Z M 9.0625 12 L 14 12 L 10.40625 16.78125 Z M 18 12 L 22.9375 12 L 21.59375 16.78125 Z M 16 12.6875 L 20 18 L 12 18 Z M 7.8125 15 L 8.8125 18.5 L 6.5625 19.625 Z M 24.1875 15 L 25.4375 19.625 L 23.1875 18.5 Z M 12 20 L 20 20 L 16 25.3125 Z M 9.6875 20.28125 L 12.625 24.1875 L 7.25 21.5 Z M 22.3125 20.28125 L 24.75 21.5 L 19.375 24.1875 Z M 22.3125 20.28125 \"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport const Logo = () => {\r\n  let [color, changeColor] = useState('#fff')\r\n  let [rotation, setRotation] = useState(false)\r\n  return (\r\n    <div id=\"logo\"\r\n       onMouseEnter={() => changeColor(randomColor())}\r\n       onClick={() => {\r\n         setRotation(true)\r\n         setTimeout(() => {\r\n           setRotation(false)\r\n           changeColor(randomColor())\r\n         }, 500)\r\n       }}\r\n    >\r\n      <ImageLogo color={color} rotation={rotation}/>\r\n      <div className=\"caption\" style={{ color }}>Quenta</div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Switch, Route, Link, useParams, useRouteMatch } from 'react-router-dom'\r\n\r\nimport './CharBook.scss'\r\n\r\nconst exampleChars = {\r\n  'witch': {\r\n    name: 'Ведьма',\r\n    icon: 'https://i.ibb.co/xzThWQx/image.png',\r\n    text: 'Ведьма, что живёт в мрачном лесу',\r\n  },\r\n  'witcher': {\r\n    name: 'Ведьмак',\r\n    icon: 'https://i.ibb.co/txjCQ4h/image.png',\r\n    text: 'Ведьмак, что терпит лютую ведьму',\r\n  },\r\n  'mushroom': {\r\n    name: 'Грибочек',\r\n    icon: 'https://i.ibb.co/q57Fccc/image.png',\r\n    text: 'Безобидный грибочек',\r\n  },\r\n  'burning-head': {\r\n    name: 'Горящая Головушка',\r\n    icon: 'https://i.ibb.co/565pFk5/image.png',\r\n    text: 'Не пейте слишком много бензина, плиз',\r\n  },\r\n  'kind-fishy': {\r\n    name: 'Добрая Рыбонька',\r\n    icon: 'https://i.ibb.co/QjWYZbk/image.png',\r\n    text: 'Самая добрая Рыбонька на свете',\r\n  },\r\n}\r\n\r\nfunction Sidebar({ url }) {\r\n  return (\r\n    <aside className=\"char-book--sidebar\">\r\n      {Object.entries(exampleChars).map((character, index) => (\r\n        <Link\r\n          to={`${url}/${character[0]}`}\r\n          className=\"char-book--preview-block\"\r\n          key={index}\r\n        >\r\n          <img className=\"char-book--preview-image\" src={character[1].icon} alt={character[1].name}/>\r\n          <span className=\"char-book--preview-name\">{character[1].name}</span>\r\n        </Link>\r\n      ))}\r\n    </aside>\r\n  )\r\n}\r\n\r\nfunction CharacterInfo() {\r\n  const { charId } = useParams()\r\n  const character = exampleChars[charId]\r\n\r\n  return (\r\n    <>\r\n      <h3>{character.name}</h3>\r\n      <div>{character.text}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function CharBook() {\r\n  const { path, url } = useRouteMatch()\r\n\r\n  return (\r\n    <section className=\"char-book\">\r\n      <Sidebar url={url}/>\r\n      <section className=\"char-book--content\">\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <h3>Please select a character</h3>\r\n          </Route>\r\n          <Route path={`${path}/:charId`}>\r\n            <CharacterInfo/>\r\n          </Route>\r\n        </Switch>\r\n      </section>\r\n    </section>\r\n  )\r\n}","/**\r\n * Возвращает случайное число в заданном диапазоне\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nexport const randomIn = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n/**\r\n * Получает случайный элемент переданного массива\r\n * @param {Array<any>} array\r\n */\r\nexport const randomInArr = array => array[randomIn(0, array.length - 1)]","import capitalize from 'lodash/capitalize'\r\nimport { randomInArr } from '../utils/number.util'\r\n\r\n/**\r\n * Перечисление возможных полов персонажа\r\n */\r\nexport const Genders = {\r\n  MALE: 'Мужской',\r\n  FEMALE: 'Женский',\r\n  OTHER: 'Другой'\r\n}\r\n\r\n/*\r\n * Генератор имён. \r\n * TODO: Должно быть несколько способов генерить имена:\r\n * - какой-то набор имён будет захардкожен в приложении\r\n * - сложение некоторых захардкоженных кусков имён\r\n * - загрузка внешних словарей с именами\r\n */\r\nconst firstParts = [\r\n  'ака', 'алас', 'али', 'анг', 'ар', 'гэл', 'де', 'дем', 'джакс', 'кай', 'карс', 'ки', 'кил', 'кин', 'куман', 'лагр',\r\n  'леп', 'лито', 'лора', 'мек', 'мира', 'мон', 'нира', 'о', 'пара', 'пирс', 'ранд', 'рем', 'рол', 'рон', 'сар', 'так',\r\n  'тари', 'тор', 'тэр', 'ун', 'фел', 'фес', 'фен', 'фрел', 'цум', 'эл'\r\n]\r\n\r\nconst maleNameParts = [\r\n  'дил', 'шим', 'кай', 'мэй', 'эль', 'ол', 'хим', 'рой', 'ронд', 'он', 'сим', 'гранж', 'филд', 'талас', 'стер',\r\n  'зул', 'кард', 'кил', 'дес', 'ранг', 'рел', 'рен', 'тир', 'огил', 'зис', 'тан', 'тео', 'лес', 'ст', 'вит', 'пе', 'теск', 'ольм',\r\n  'тен', 'мон', 'зен', 'ис', 'ус', 'нус', 'нис', 'гус', 'нус', 'анс', 'альд', 'бальд', 'мир', 'лир', 'тум'\r\n]\r\n\r\nconst femaleNameParts = [\r\n  'дина', 'шима', 'кая', 'мэй', 'эль', 'кина', 'энь', 'уфа', 'уха', 'тесс', 'эсс', 'ола', 'ра', 'вен', 'ада', 'бра', 'иль', 'да',\r\n  'лия', 'ья', 'ия', 'теса', 'ла', 'мара', 'на', 'минель', 'леса', 'иса', 'тея', 'тер', 'тра', 'нья', 'ктея', 'сея', 'айя'\r\n]\r\n\r\nconst otherNameParts = [\r\n  'кет', 'зе', 'мезе', 'ше', 'пе', 'льпе', 'фес', 'сис', 'фе', 'мо', 'умо', 'уно', 'пург', 'тарпо', 'ольмо', 'зефф', 'черс',\r\n  'тур', 'омо', 'рене', 'рено', 'шефе', 'оссе', 'харж', 'бре', 'те', 'ги', 'иги', 'зулу', 'зиги'\r\n]\r\n\r\nexport function getRandomName(gender) {\r\n  switch (gender) {\r\n    case Genders.MALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(maleNameParts))\r\n    }\r\n    case Genders.FEMALE: {\r\n      return capitalize(randomInArr(firstParts) + randomInArr(femaleNameParts))\r\n    }\r\n    default: {\r\n      let twistParameter = '' // здесь присутствует возможность расширения имени дополнительным слогом\r\n      let twistCoefficient = Math.random() * 10 + 1\r\n      if (twistCoefficient <= 1) {\r\n        twistParameter = randomInArr(maleNameParts)\r\n      } else if (twistCoefficient > 1 && twistCoefficient <= 3) {\r\n        twistParameter = randomInArr(femaleNameParts)\r\n      }\r\n      return capitalize(randomInArr(firstParts) + twistParameter + randomInArr(otherNameParts))\r\n    }\r\n  }\r\n}","import React from 'react'\r\nimport * as NameMode from '../../../model/view/name-mode'\r\nimport { Genders } from '../../../logic/name-generator'\r\n\r\nimport './NameContainer.scss'\r\n\r\nconst TagStyles = {\r\n  [NameMode.CHARACTER]: {\r\n    backgroundColor: '#286958',\r\n    color: '#fff'\r\n  },\r\n  [NameMode.OBJECT]: {\r\n    backgroundColor: '#3a4f69',\r\n    color: '#fff'\r\n  }\r\n}\r\n\r\nexport const NameTag = ({ name, mode, gender }) => {\r\n  let genderClass\r\n  switch (gender) {\r\n    case Genders.FEMALE:\r\n      genderClass = 'name-tag--female'\r\n      break\r\n    case Genders.MALE:\r\n      genderClass = 'name-tag--male'\r\n      break\r\n    case Genders.OTHER:\r\n      genderClass = 'name-tag--other-gender'\r\n      break\r\n    default:\r\n      genderClass = ''\r\n  }\r\n  return (\r\n    <div className={`name-tag ${genderClass}`} style={mode ? TagStyles[mode] : undefined}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\n// TODO this supposed to be connected to reducer\r\nexport const NameContainer = ({ names }) => {\r\n  const tags = names.map((name, index) => <NameTag name={name.value} mode={name.mode} gender={name.gender} key={index}/>)\r\n  return (\r\n    <div id=\"name-container\">\r\n      {tags}\r\n    </div>\r\n  )\r\n}","export const CHARACTER = 'CHARACTER'\r\nexport const OBJECT = 'OBJECT'","import CharBook from './char-book/CharBook'\r\nimport NameGenerator from './name-generator/NameGenerator'\r\n\r\nconst routes = [\r\n  // TODO localizations instead of raw text\r\n  {\r\n    text: 'Каталог персонажей',\r\n    path: '/char-book',\r\n    //exact: true,\r\n    component: CharBook,\r\n  },\r\n  {\r\n    text: '[legacy] Генератор имён',\r\n    path: '/name-gen',\r\n    component: NameGenerator,\r\n  },\r\n]\r\n\r\nexport default routes","import React, { Component } from 'react'\r\nimport { processName } from '../../utils/names.util'\r\nimport { Genders, getRandomName } from '../../logic/name-generator'\r\nimport { NameContainer } from './name-container/NameContainer'\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport * as NameMode from '../../model/view/name-mode'\r\nimport './NameGenerator.scss'\r\n\r\nclass NameGenerator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      allNames: [],\r\n      nameMode: NameMode.CHARACTER,\r\n      gender: Genders.MALE\r\n    }\r\n  }\r\n\r\n  saveName = () => {\r\n    if (this.state.name) {\r\n      this.setState(state => ({\r\n        name: '',\r\n        allNames: [\r\n          ...state.allNames,\r\n          {\r\n            value: processName(state.name),\r\n            mode: state.nameMode,\r\n            gender: state.gender\r\n          }\r\n        ]\r\n      }))\r\n    }\r\n  }\r\n\r\n  generateName = () => {\r\n    this.setState(state => ({\r\n      name: getRandomName(state.gender)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"name-generator\">\r\n        <div className=\"name-generator__input-group\">\r\n          <input\r\n            className=\"name-generator__input\"\r\n            value={this.state.name}\r\n            placeholder=\"Введите имя/название\"\r\n            onChange={event => this.setState({ name: event.target.value })}\r\n          />\r\n          <button\r\n            className=\"name-generator__button name-generator__button-generate\"\r\n            onClick={this.generateName}\r\n          >\r\n            Сгенерировать\r\n          </button>\r\n          <button\r\n            className=\"name-generator__button name-generator__button-save\"\r\n            disabled={isEmpty(this.state.name)}\r\n            onClick={this.saveName}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </div>\r\n\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.CHARACTER}\r\n            onChange={() => this.setState({ nameMode: NameMode.CHARACTER })}\r\n            id=\"rb-character\"\r\n          />\r\n          <label htmlFor=\"rb-character\">Персонаж</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.nameMode === NameMode.OBJECT}\r\n            onChange={() => this.setState({ nameMode: NameMode.OBJECT })}\r\n            id=\"rb-object\"\r\n          />\r\n          <label htmlFor=\"rb-object\">Объект</label>\r\n        </form>\r\n\r\n        {this.state.nameMode === NameMode.CHARACTER &&\r\n        <form className=\"flags\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.MALE}\r\n            onChange={() => this.setState({gender: Genders.MALE})}\r\n            id=\"rb-male\"\r\n          />\r\n          <label htmlFor=\"rb-male\">Мужской</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.FEMALE}\r\n            onChange={() => this.setState({gender: Genders.FEMALE})}\r\n            id=\"rb-female\"\r\n          />\r\n          <label htmlFor=\"rb-female\">Женский</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={this.state.gender === Genders.OTHER}\r\n            onChange={() => this.setState({gender: Genders.OTHER})}\r\n            id=\"rb-other-gender\"\r\n          />\r\n          <label htmlFor=\"rb-other-gender\">Другой</label>\r\n        </form>\r\n        }\r\n        <NameContainer names={this.state.allNames} />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NameGenerator","export const processName = str => str.trim()","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Logo } from './logo/Logo'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\"\r\nimport routes from './routes'\r\n\r\nimport './App.scss'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"application-layout\">\r\n        <nav className=\"app-header\">\r\n          <Logo />\r\n          {routes.map((r, index) => (\r\n            <Link className=\"app-header--link\" key={index} to={r.path}>\r\n              {r.text}\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n        <article className=\"app-content\">\r\n          <Switch>\r\n            {routes.map((r, index) => (\r\n              <Route\r\n                key={index}\r\n                exact={r.exact}\r\n                path={r.path}\r\n              >\r\n                <r.component />\r\n              </Route>\r\n            ))}\r\n          </Switch>\r\n        </article>\r\n        <footer className=\"app-footer\">\r\n          © V.Scarlet, 2019 - {new Date().getFullYear()}\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './index.scss'\r\n\r\nReactDOM.render((\r\n  <Router>\r\n    <App/>\r\n  </Router>\r\n), document.getElementById('root'))"],"sourceRoot":""}